@model AMStock.Core.Common.TransactionLineHeader
<div id="table_id_@Model.TransactionType.ToString()">
    <div id="spinner_@Model.TransactionType.ToString()">
    </div>
    <div>
        <p>@ViewData["totalNumber" + @Model.TransactionType.ToString()] Item(s) found</p>
    </div>

    <table class="table table-striped table-condensed table-hover ">

        <tr>
            <th>@Html.DisplayNameFor(model => model.SerialNumber)
            </th>
            <th>Store
            </th>
            <th>On Date
            </th>
            <th>Transaction No.
            </th>
            <th>@ViewData["bpType"+ @Model.TransactionType.ToString()]
            </th>
            <th style="text-align: right;">Each Price
            </th>
            <th style="text-align: right;">Unit
            </th>
            <th style="text-align: right;">Line Price
            </th>

        </tr>

        <tbody>
            @foreach (var item in Model.TransactionLineDetails)
            {
                <tr>
                    <td>@Html.DisplayFor(model => item.SerialNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.WarehouseName)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.TransactionDateString)
                    </td>
                    <td>
                        @Html.ActionLink(@Html.DisplayFor(model => item.TransactionNumber).ToString(), "Details", "Transaction", new { id = item.TransactionId, type = @ViewData["TranType"] }, null)

                    </td>
                    <td>
                        @Html.ActionLink(@Html.DisplayFor(model => item.DisplayName).ToString(), "Details", "BusinessPartner", new { id = item.BusinessPartnerId, type = @ViewData["BpType"] }, null)
                    </td>

                    <td style="text-align: right;">
                        @Html.DisplayFor(model => item.EachPrice)
                    </td>
                    <td style="text-align: right;">
                        @Html.DisplayFor(model => item.Unit)
                    </td>
                    <td style="text-align: right;">
                        @Html.DisplayFor(model => item.LinePrice)
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <ul class="pager">
        <li style="display:@ViewData["prevDisabled"+ @Model.TransactionType.ToString()]; " class="hidden-print">
            @Ajax.ActionLink("← Previous", "GetItemTransactions", "OnHandInventory",
                new
                {
                    searchText = @ViewData["SearchText"],
                    page = @ViewData["Page"+ @Model.TransactionType.ToString()],
                    pageSize = @ViewData["PageSize"+ @Model.TransactionType.ToString()],
                    ptype = -1,
                    transactionType = @Model.TransactionType.ToString(),
                    itemId = @ViewData["ItemId"]
                }, new AjaxOptions
                {
                    HttpMethod = "GET",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "table_id_" + @Model.TransactionType.ToString(),
                    LoadingElementId = "spinner_" + @Model.TransactionType.ToString()
                })
        </li>

        <li>
            <span>Page @ViewData["Page"+ @Model.TransactionType.ToString()] of @ViewData["totalPages"+ @Model.TransactionType.ToString()] </span>
        </li>

        <li style="display:@ViewData["nextDisabled"+ @Model.TransactionType.ToString()]; " class="hidden-print">
            @Ajax.ActionLink("Next →", "GetItemTransactions", "OnHandInventory",
                new
                {
                    searchText = @ViewData["SearchText"],
                    page = @ViewData["Page"+ @Model.TransactionType.ToString()],
                    pageSize = @ViewData["PageSize"+ @Model.TransactionType.ToString()],
                    ptype = 1,
                    transactionType = @Model.TransactionType.ToString(),
                    itemId = @ViewData["ItemId"]
                }, new AjaxOptions
                {
                    HttpMethod = "GET",
                    InsertionMode = InsertionMode.Replace,
                    UpdateTargetId = "table_id_" + @Model.TransactionType.ToString(),
                    LoadingElementId = "spinner_" + @Model.TransactionType.ToString()
                }, new { @style = "width: 106px;" })
        </li>
    </ul>

    
</div>
